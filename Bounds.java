// maths object generated by a shape.
// can't be changed after it is created.

public class Bounds {
	private double x;
	private double y;
	private double width;
	private double height;
	
	public Bounds(double centerX, double centerY, double widthOfShape, double heightOfShape) {
		x = centerX;
		y = centerY;
		width = widthOfShape;
		height = heightOfShape;
	}
	
	// eml
	
	public double getCenterX() {
		return x;
	}
	
	public double getCenterY() {
		return y;
	}
	
	public double getWidth() {
		return width;
	}
	
	public double getHeight() {
		return height;
	}
	
	public double getTopLeftX() {
		return x - (width / 2);
	}
	
	public double getTopLeftY() {
		return y - (height / 2);
	}
	
	public double getBotRightX() {
		return x + (width / 2);
	}
	
	public double getBotRightY() {
		return y + (height / 2);
	}
	
	public boolean collidesX(Bounds otherBounds) {
		return (
			   getTopLeftX() < otherBounds.getBotRightX()
			&& getBotRightX() > otherBounds.getTopLeftX()
		);
	}
	
	public boolean collidesY(Bounds otherBounds) {
		return (
			   getTopLeftY() < otherBounds.getBotRightY()
			&& getBotRightY() > otherBounds.getTopLeftY()
		);
	}
	
	/**
	 * Is the object in the area given?
	 * 
	 * @return whether or not the object is in the area given.
	 */
	public boolean isInsideX(Bounds otherBounds) {
		return (
			   getTopLeftX() >= otherBounds.getTopLeftX()
			&& getBotRightX() <= otherBounds.getBotRightX()
		);
	}

	/**
	 * Is the object in the area given?
	 * 
	 * @return whether or not the object is in the area given.
	 */
	public boolean isInsideY(Bounds otherBounds) {
		return (
			   getTopLeftY() >= otherBounds.getTopLeftY()
			&& getBotRightY() <= otherBounds.getBotRightY()
		);
	}
	
	public boolean isInside(Bounds otherBounds)
	{
		return (
			   isInsideX(otherBounds)
			&& isInsideY(otherBounds)
		);
	}
	
	public boolean collides(Bounds otherBounds)
	{
		return (
			   collidesX(otherBounds)
			&& collidesY(otherBounds)
		);
	}
}